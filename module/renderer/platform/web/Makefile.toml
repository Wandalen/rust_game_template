[config]
skip_core_tasks = true
skip_git_env_info = true
skip_rust_env_info = true
skip_crate_env_info = true

[env]
CARGO_MAKE_WEB_PORT = 8080 # qqq : !

# Private

[tasks.web_watch]
private = true
watch = { watch = [ "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../../src/" ] }

[tasks.web_build_target]
private = true
command = "cargo"
install_script = "rustup target add wasm32-unknown-unknown"
# args = [ "build", "--manifest-path", "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/Cargo.toml", "--target", "wasm32-unknown-unknown", "--features", "game_template/webgl,game_template/web-sys" ]
args = [ "build", "--manifest-path", "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../../Cargo.toml", "--target", "wasm32-unknown-unknown" ]

[tasks.web_wasm_rebuild]
private = true
command = "wasm-bindgen"
args = [ "--target", "web", "--out-dir", "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../../../../target/web", "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../../../../target/wasm32-unknown-unknown/debug/game_template.wasm" ]

[tasks.web_wasm_build]
extend = "web_wasm_rebuild"
install_crate = "wasm-bindgen-cli"

[tasks.web_build_copy_static]
private = true
script_runner = "@duckscript" # qqq : replace all @shell -> @duckscript aaa:replaced where possible
script = '''
glob_cp ${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/static/* ${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../../../../target/web
'''

[tasks.web_server_run]
private = true
install_crate = "basic-http-server"
command = "basic-http-server"
args = [ "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../../../../target/web", "-a", "127.0.0.1:${CARGO_MAKE_WEB_PORT}" ]

[tasks.web_server_browsersync]
private = true
command = 'node'
args = [ "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/step/BrowserSync.ss" ]

# Public

[tasks.web_install_dependencies]
description = "Install web dependencies"
private = false
category = "Prerequisites"
script_runner = "@duckscript"
script = '''
exec cd ${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}
exec npm ci
'''

[tasks.web_build]
description = "Build web target. Rebuilds on change."
private = false
category = "Web"
dependencies = [ "web_build_target", "web_wasm_build", "web_build_copy_static" ]

[tasks.web_rebuild]
description = "Build web target. Rebuilds on change."
private = false
category = "Web"
dependencies = [ "web_build_target", "web_wasm_rebuild" ]

[tasks.web_run]
description = "Run web target. Rebuilds app on change"
category = "Web"
extend = "web_build"
run_task = { name = [ "web_server_run" ] }
# run_task = { name = [ "web_server_browsersync" ] }

[tasks.web_rerun]
description = "Run web target. Rebuilds app on change"
category = "Web"
run_task = { name = [ "web_server_browsersync", "web_rebuild" ], parallel = true }

# [tasks.echo]
# command = "echo"
# args = [ "CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY : ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}" ]
